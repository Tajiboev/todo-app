{"version":3,"sources":["Styles/addtodo.module.sass","schemas.ts","Components/AddTodo.tsx"],"names":["module","exports","inputschema","yup","shape","text","required","AddTodo","addTodo","useStoreActions","actions","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","onSubmit","data","todo","id","nanoid","isCompleted","spellCheck","autoComplete","className","styles","wrapper","input","input_error","type","placeholder","button","error_message","message"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,OAAS,wBAAwB,cAAgB,+BAA+B,YAAc,+B,8FCCrKC,EAAcC,MAAaC,MAAM,CAC7CC,KAAMF,MAAaG,SAAS,sC,yBC6CdC,UAvCK,WACnB,IAAMC,EAAUC,aAAgB,SAACC,GAAD,OAAaA,EAAQF,WAD5B,EAQrBG,YAAgB,CACnBC,SAAUC,YAAYX,KALtBY,EAJwB,EAIxBA,SACAC,EALwB,EAKxBA,aACAC,EANwB,EAMxBA,MACaC,EAPW,EAOxBC,UAAaD,OAcd,OACC,uBAAME,SAAUJ,GAXuB,SAACK,GACxC,IAAIC,EAAc,CACjBC,GAAIC,YAAO,GACXlB,KAAMe,EAAKf,KACXmB,aAAa,GAEdhB,EAAQa,GACRL,OAIwCS,YAAY,EAAOC,aAAa,MAAxE,UACC,sBAAKC,UAAWC,IAAOC,QAAvB,UACC,mCACCF,UAAWC,IAAOE,MAAP,WAAmBb,EAAOZ,KAAOuB,IAAOG,YAAc,IACjEC,KAAK,OACLC,YAAY,iCACRnB,EAAS,UAEd,wBAAQkB,KAAK,SAASL,UAAWC,IAAOM,OAAxC,yBAIAjB,EAAOZ,MAAQ,mBAAGsB,UAAWC,IAAOO,cAArB,SAAqClB,EAAOZ,KAAK+B","file":"static/js/6.986c3dbf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"addtodo_wrapper__leoUM\",\"input\":\"addtodo_input__2MBw8\",\"button\":\"addtodo_button__3LSdF\",\"error_message\":\"addtodo_error_message__3PHD9\",\"input_error\":\"addtodo_input_error__3ShVn\"};","import * as yup from \"yup\";\r\n\r\nexport const inputschema = yup.object().shape({\r\n\ttext: yup.string().required(\"Please provide a valid todo text\"),\r\n});\r\n","import { nanoid } from \"nanoid\";\r\nimport { FC } from \"react\";\r\nimport { useStoreActions } from \"../Store/typedhooks\";\r\nimport { ITodo, IInput } from \"../interfaces\";\r\nimport { useForm, SubmitHandler } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { inputschema } from \"../schemas\";\r\nimport styles from \"../Styles/addtodo.module.sass\";\r\n\r\nconst AddTodo: FC = () => {\r\n\tconst addTodo = useStoreActions((actions) => actions.addTodo);\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\treset,\r\n\t\tformState: { errors },\r\n\t} = useForm<IInput>({\r\n\t\tresolver: yupResolver(inputschema),\r\n\t});\r\n\tconst onSubmit: SubmitHandler<IInput> = (data) => {\r\n\t\tlet todo: ITodo = {\r\n\t\t\tid: nanoid(6),\r\n\t\t\ttext: data.text,\r\n\t\t\tisCompleted: false,\r\n\t\t};\r\n\t\taddTodo(todo);\r\n\t\treset();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit(onSubmit)} spellCheck={false} autoComplete=\"off\">\r\n\t\t\t<div className={styles.wrapper}>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={styles.input + ` ${errors.text ? styles.input_error : \"\"}`}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"What do you need to do today?\"\r\n\t\t\t\t\t{...register(\"text\")}\r\n\t\t\t\t/>\r\n\t\t\t\t<button type=\"submit\" className={styles.button}>\r\n\t\t\t\t\tAdd todo\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t{errors.text && <p className={styles.error_message}>{errors.text.message}</p>}\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default AddTodo;\r\n"],"sourceRoot":""}